('CUDA devices: ', <class 'torch.cuda.device'>)
('GPU numbers: ', 1L)
Initializing weights...
Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
ReLU(inplace)
Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
ReLU(inplace)
ModuleList(
  (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
  (1): ReLU(inplace)
  (2): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
  (3): ReLU(inplace)
)
Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
TCB(
  (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (deconv1): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
)
Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ConvTranspose2d(1024, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
TCB(
  (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (deconv1): ConvTranspose2d(1024, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
)
Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
TCB(
  (conv1): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (deconv1): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
)
Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
TCB(
  (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (deconv1): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
)
ModuleList(
  (0): TCB(
    (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (deconv1): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  )
  (1): TCB(
    (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (deconv1): ConvTranspose2d(1024, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  )
  (2): TCB(
    (conv1): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (deconv1): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  )
  (3): TCB(
    (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (deconv1): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  )
)
Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(1024, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ModuleList(
  (0): Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (2): Conv2d(1024, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Conv2d(512, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)
Conv2d(512, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(512, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(1024, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(512, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ModuleList(
  (0): Conv2d(512, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Conv2d(512, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (2): Conv2d(1024, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Conv2d(512, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)
Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ModuleList(
  (0): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (2): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)
Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
ModuleList(
  (0): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (2): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)
Loading base network...
(u'0.weight', (64L, 3L, 3L, 3L))
(u'0.bias', (64L,))
(u'2.weight', (64L, 64L, 3L, 3L))
(u'2.bias', (64L,))
(u'5.weight', (128L, 64L, 3L, 3L))
(u'5.bias', (128L,))
(u'7.weight', (128L, 128L, 3L, 3L))
(u'7.bias', (128L,))
(u'10.weight', (256L, 128L, 3L, 3L))
(u'10.bias', (256L,))
(u'12.weight', (256L, 256L, 3L, 3L))
(u'12.bias', (256L,))
(u'14.weight', (256L, 256L, 3L, 3L))
(u'14.bias', (256L,))
(u'17.weight', (512L, 256L, 3L, 3L))
(u'17.bias', (512L,))
(u'19.weight', (512L, 512L, 3L, 3L))
(u'19.bias', (512L,))
(u'21.weight', (512L, 512L, 3L, 3L))
(u'21.bias', (512L,))
(u'24.weight', (512L, 512L, 3L, 3L))
(u'24.bias', (512L,))
(u'26.weight', (512L, 512L, 3L, 3L))
(u'26.bias', (512L,))
(u'28.weight', (512L, 512L, 3L, 3L))
(u'28.bias', (512L,))
(u'31.weight', (1024L, 512L, 3L, 3L))
(u'31.bias', (1024L,))
(u'33.weight', (1024L, 1024L, 1L, 1L))
(u'33.bias', (1024L,))
module.vgg.0.weight
(64L, 3L, 3L, 3L)
module.vgg.0.bias
(64L,)
module.vgg.2.weight
(64L, 64L, 3L, 3L)
module.vgg.2.bias
(64L,)
module.vgg.5.weight
(128L, 64L, 3L, 3L)
module.vgg.5.bias
(128L,)
module.vgg.7.weight
(128L, 128L, 3L, 3L)
module.vgg.7.bias
(128L,)
module.vgg.10.weight
(256L, 128L, 3L, 3L)
module.vgg.10.bias
(256L,)
module.vgg.12.weight
(256L, 256L, 3L, 3L)
module.vgg.12.bias
(256L,)
module.vgg.14.weight
(256L, 256L, 3L, 3L)
module.vgg.14.bias
(256L,)
module.vgg.17.weight
(512L, 256L, 3L, 3L)
module.vgg.17.bias
(512L,)
module.vgg.19.weight
(512L, 512L, 3L, 3L)
module.vgg.19.bias
(512L,)
module.vgg.21.weight
(512L, 512L, 3L, 3L)
module.vgg.21.bias
(512L,)
module.vgg.24.weight
(512L, 512L, 3L, 3L)
module.vgg.24.bias
(512L,)
module.vgg.26.weight
(512L, 512L, 3L, 3L)
module.vgg.26.bias
(512L,)
module.vgg.28.weight
(512L, 512L, 3L, 3L)
module.vgg.28.bias
(512L,)
module.vgg.31.weight
(1024L, 512L, 3L, 3L)
module.vgg.31.bias
(1024L,)
module.vgg.33.weight
(1024L, 1024L, 1L, 1L)
module.vgg.33.bias
(1024L,)
module.L2Norm_conv4_3.weight
(512L,)
module.L2Norm_conv5_3.weight
(512L,)
module.extras.0.weight
(256L, 1024L, 1L, 1L)
module.extras.0.bias
(256L,)
module.extras.2.weight
(512L, 256L, 3L, 3L)
module.extras.2.bias
(512L,)
module.back_pyramid.0.conv1.weight
(256L, 512L, 3L, 3L)
module.back_pyramid.0.conv1.bias
(256L,)
module.back_pyramid.0.bn1.weight
(256L,)
module.back_pyramid.0.bn1.bias
(256L,)
module.back_pyramid.0.bn1.running_mean
(256L,)
module.back_pyramid.0.bn1.running_var
(256L,)
module.back_pyramid.0.conv2.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.0.conv2.bias
(256L,)
module.back_pyramid.0.deconv1.weight
(512L, 256L, 3L, 3L)
module.back_pyramid.0.deconv1.bias
(256L,)
module.back_pyramid.0.bn2.weight
(256L,)
module.back_pyramid.0.bn2.bias
(256L,)
module.back_pyramid.0.bn2.running_mean
(256L,)
module.back_pyramid.0.bn2.running_var
(256L,)
module.back_pyramid.0.conv3.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.0.conv3.bias
(256L,)
module.back_pyramid.0.bn3.weight
(256L,)
module.back_pyramid.0.bn3.bias
(256L,)
module.back_pyramid.0.bn3.running_mean
(256L,)
module.back_pyramid.0.bn3.running_var
(256L,)
module.back_pyramid.1.conv1.weight
(256L, 512L, 3L, 3L)
module.back_pyramid.1.conv1.bias
(256L,)
module.back_pyramid.1.bn1.weight
(256L,)
module.back_pyramid.1.bn1.bias
(256L,)
module.back_pyramid.1.bn1.running_mean
(256L,)
module.back_pyramid.1.bn1.running_var
(256L,)
module.back_pyramid.1.conv2.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.1.conv2.bias
(256L,)
module.back_pyramid.1.deconv1.weight
(1024L, 256L, 3L, 3L)
module.back_pyramid.1.deconv1.bias
(256L,)
module.back_pyramid.1.bn2.weight
(256L,)
module.back_pyramid.1.bn2.bias
(256L,)
module.back_pyramid.1.bn2.running_mean
(256L,)
module.back_pyramid.1.bn2.running_var
(256L,)
module.back_pyramid.1.conv3.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.1.conv3.bias
(256L,)
module.back_pyramid.1.bn3.weight
(256L,)
module.back_pyramid.1.bn3.bias
(256L,)
module.back_pyramid.1.bn3.running_mean
(256L,)
module.back_pyramid.1.bn3.running_var
(256L,)
module.back_pyramid.2.conv1.weight
(256L, 1024L, 3L, 3L)
module.back_pyramid.2.conv1.bias
(256L,)
module.back_pyramid.2.bn1.weight
(256L,)
module.back_pyramid.2.bn1.bias
(256L,)
module.back_pyramid.2.bn1.running_mean
(256L,)
module.back_pyramid.2.bn1.running_var
(256L,)
module.back_pyramid.2.conv2.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.2.conv2.bias
(256L,)
module.back_pyramid.2.deconv1.weight
(512L, 256L, 3L, 3L)
module.back_pyramid.2.deconv1.bias
(256L,)
module.back_pyramid.2.bn2.weight
(256L,)
module.back_pyramid.2.bn2.bias
(256L,)
module.back_pyramid.2.bn2.running_mean
(256L,)
module.back_pyramid.2.bn2.running_var
(256L,)
module.back_pyramid.2.conv3.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.2.conv3.bias
(256L,)
module.back_pyramid.2.bn3.weight
(256L,)
module.back_pyramid.2.bn3.bias
(256L,)
module.back_pyramid.2.bn3.running_mean
(256L,)
module.back_pyramid.2.bn3.running_var
(256L,)
module.back_pyramid.3.conv1.weight
(256L, 512L, 3L, 3L)
module.back_pyramid.3.conv1.bias
(256L,)
module.back_pyramid.3.bn1.weight
(256L,)
module.back_pyramid.3.bn1.bias
(256L,)
module.back_pyramid.3.bn1.running_mean
(256L,)
module.back_pyramid.3.bn1.running_var
(256L,)
module.back_pyramid.3.conv2.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.3.conv2.bias
(256L,)
module.back_pyramid.3.deconv1.weight
(512L, 256L, 3L, 3L)
module.back_pyramid.3.deconv1.bias
(256L,)
module.back_pyramid.3.bn2.weight
(256L,)
module.back_pyramid.3.bn2.bias
(256L,)
module.back_pyramid.3.bn2.running_mean
(256L,)
module.back_pyramid.3.bn2.running_var
(256L,)
module.back_pyramid.3.conv3.weight
(256L, 256L, 3L, 3L)
module.back_pyramid.3.conv3.bias
(256L,)
module.back_pyramid.3.bn3.weight
(256L,)
module.back_pyramid.3.bn3.bias
(256L,)
module.back_pyramid.3.bn3.running_mean
(256L,)
module.back_pyramid.3.bn3.running_var
(256L,)
module.bi_loc.0.weight
(12L, 512L, 3L, 3L)
module.bi_loc.0.bias
(12L,)
module.bi_loc.1.weight
(12L, 512L, 3L, 3L)
module.bi_loc.1.bias
(12L,)
module.bi_loc.2.weight
(12L, 1024L, 3L, 3L)
module.bi_loc.2.bias
(12L,)
module.bi_loc.3.weight
(12L, 512L, 3L, 3L)
module.bi_loc.3.bias
(12L,)
module.bi_conf.0.weight
(6L, 512L, 3L, 3L)
module.bi_conf.0.bias
(6L,)
module.bi_conf.1.weight
(6L, 512L, 3L, 3L)
module.bi_conf.1.bias
(6L,)
module.bi_conf.2.weight
(6L, 1024L, 3L, 3L)
module.bi_conf.2.bias
(6L,)
module.bi_conf.3.weight
(6L, 512L, 3L, 3L)
module.bi_conf.3.bias
(6L,)
module.multi_loc.0.weight
(12L, 256L, 3L, 3L)
module.multi_loc.0.bias
(12L,)
module.multi_loc.1.weight
(12L, 256L, 3L, 3L)
module.multi_loc.1.bias
(12L,)
module.multi_loc.2.weight
(12L, 256L, 3L, 3L)
module.multi_loc.2.bias
(12L,)
module.multi_loc.3.weight
(12L, 256L, 3L, 3L)
module.multi_loc.3.bias
(12L,)
module.multi_conf.0.weight
(63L, 256L, 3L, 3L)
module.multi_conf.0.bias
(63L,)
module.multi_conf.1.weight
(63L, 256L, 3L, 3L)
module.multi_conf.1.bias
(63L,)
module.multi_conf.2.weight
(63L, 256L, 3L, 3L)
module.multi_conf.2.bias
(63L,)
module.multi_conf.3.weight
(63L, 256L, 3L, 3L)
module.multi_conf.3.bias
(63L,)
Loading the dataset...
('Training RefineDet on:', 'VOC0712')
Using the specified args:
Namespace(basenet='vgg16_reducedfc.pth', batch_size=32, cuda=True, dataset='VOC', dataset_root='/root/dataset/voc/VOCdevkit/', gamma=0.1, lr=0.001, momentum=0.9, num_workers=4, resume=None, save_folder='weights/', start_iter=0, visdom=False, weight_decay=0.0005)
timer: 14.7445 sec.
iter 0 || Loss: 31.2651 || 
timer: 0.6600 sec.
iter 10 || Loss: 18.3154 || 
timer: 0.4596 sec.
iter 20 || Loss: 14.6512 || 
timer: 0.3915 sec.
iter 30 || Loss: 14.4055 || 
timer: 0.4219 sec.
iter 40 || Loss: 12.7400 || 
timer: 0.3916 sec.
iter 50 || Loss: 12.5604 || 
timer: 0.6713 sec.
iter 60 || Loss: 12.2046 || 
timer: 0.3980 sec.
iter 70 || Loss: 12.7696 || 
timer: 0.3979 sec.
iter 80 || Loss: 12.6113 || 
timer: 0.3954 sec.
iter 90 || Loss: 11.8618 || 
timer: 0.3931 sec.
iter 100 || Loss: 11.8064 || 
timer: 0.4050 sec.
iter 110 || Loss: 11.4311 || 
timer: 0.4011 sec.
iter 120 || Loss: 11.1225 || 
timer: 0.8757 sec.
iter 130 || Loss: 11.1118 || 
timer: 0.3935 sec.
iter 140 || Loss: 12.1286 || 
timer: 0.3932 sec.
iter 150 || Loss: 11.7364 || 
timer: 0.3937 sec.
iter 160 || Loss: 10.7023 || 
timer: 0.3919 sec.
iter 170 || Loss: 10.8850 || 
timer: 0.4018 sec.
iter 180 || Loss: 10.7133 || 
timer: 0.4035 sec.
iter 190 || Loss: 11.4662 || 
timer: 0.3987 sec.
iter 200 || Loss: 11.3940 || 
timer: 0.3935 sec.
iter 210 || Loss: 10.7704 || 
timer: 0.4019 sec.
iter 220 || Loss: 10.3302 || 
timer: 0.6730 sec.
iter 230 || Loss: 11.4199 || 
timer: 0.5869 sec.
iter 240 || Loss: 10.4989 || 
timer: 0.4094 sec.
iter 250 || Loss: 11.5354 || 
timer: 0.4068 sec.
iter 260 || Loss: 10.3850 || 
timer: 0.4005 sec.
iter 270 || Loss: 11.4338 || 
timer: 0.4037 sec.
iter 280 || Loss: 10.3315 || 
timer: 0.7358 sec.
iter 290 || Loss: 10.2073 || 
timer: 0.4068 sec.
iter 300 || Loss: 10.9622 || 
timer: 0.3928 sec.
iter 310 || Loss: 10.2192 || 
timer: 0.7448 sec.
iter 320 || Loss: 10.4057 || 
timer: 0.3962 sec.
iter 330 || Loss: 11.2142 || 
timer: 0.3917 sec.
iter 340 || Loss: 11.0381 || 
timer: 0.3926 sec.
iter 350 || Loss: 10.3352 || 
timer: 0.4090 sec.
iter 360 || Loss: 10.5876 || 
timer: 0.4047 sec.
iter 370 || Loss: 11.0745 || 
timer: 0.3941 sec.
iter 380 || Loss: 9.7777 || 
timer: 0.3920 sec.
iter 390 || Loss: 9.4434 || 
timer: 0.4095 sec.
iter 400 || Loss: 10.3354 || 
timer: 0.7114 sec.
iter 410 || Loss: 10.3579 || 
timer: 0.3899 sec.
iter 420 || Loss: 10.4422 || 
timer: 0.3939 sec.
iter 430 || Loss: 10.0843 || 
timer: 0.4033 sec.
iter 440 || Loss: 9.8715 || 
timer: 0.3929 sec.
iter 450 || Loss: 10.2121 || 
timer: 1.0198 sec.
iter 460 || Loss: 10.4894 || 
timer: 0.2400 sec.
iter 470 || Loss: 9.2408 || 
timer: 0.3987 sec.
iter 480 || Loss: 9.9863 || 
timer: 0.4035 sec.
iter 490 || Loss: 9.8925 || 
timer: 0.4069 sec.
iter 500 || Loss: 9.9416 || 
('Saving state, iter:', 500)
timer: 0.4030 sec.
iter 510 || Loss: 9.6282 || 
timer: 0.3930 sec.
iter 520 || Loss: 11.1331 || 
timer: 0.4069 sec.
iter 530 || Loss: 10.1248 || 
timer: 0.3941 sec.
iter 540 || Loss: 9.7864 || 
timer: 0.8485 sec.
iter 550 || Loss: 10.3097 || 
timer: 0.3923 sec.
iter 560 || Loss: 9.5112 || 
timer: 0.3937 sec.
iter 570 || Loss: 10.5501 || 
timer: 0.3962 sec.
iter 580 || Loss: 10.3668 || 
timer: 0.3901 sec.
iter 590 || Loss: 9.7463 || 
timer: 0.4141 sec.
iter 600 || Loss: 9.5564 || 
timer: 0.4165 sec.
iter 610 || Loss: 9.7028 || 
timer: 0.3957 sec.
iter 620 || Loss: 9.5445 || 
timer: 0.4072 sec.
iter 630 || Loss: 9.0289 || 
timer: 0.4036 sec.
iter 640 || Loss: 9.8919 || 
timer: 0.8914 sec.
iter 650 || Loss: 9.4279 || 
timer: 0.3960 sec.
iter 660 || Loss: 9.9152 || 
timer: 0.4001 sec.
iter 670 || Loss: 9.7147 || 
timer: 0.3918 sec.
iter 680 || Loss: 9.6938 || 
timer: 0.3934 sec.
iter 690 || Loss: 8.7534 || 
timer: 0.4080 sec.
iter 700 || Loss: 9.4437 || 
timer: 0.3940 sec.
iter 710 || Loss: 9.5047 || 
timer: 0.4184 sec.
iter 720 || Loss: 9.5858 || 
timer: 0.4779 sec.
iter 730 || Loss: 9.9008 || 
timer: 0.3947 sec.
iter 740 || Loss: 9.0010 || 
timer: 0.4007 sec.
iter 750 || Loss: 9.8553 || 
timer: 0.4106 sec.
iter 760 || Loss: 9.2618 || 
timer: 0.3969 sec.
iter 770 || Loss: 9.7037 || 
timer: 0.7565 sec.
iter 780 || Loss: 9.5992 || 
timer: 0.3928 sec.
iter 790 || Loss: 9.3758 || 
timer: 0.3959 sec.
iter 800 || Loss: 10.0963 || 
timer: 0.4031 sec.
iter 810 || Loss: 9.7295 || 
timer: 0.3985 sec.
iter 820 || Loss: 9.5335 || 
timer: 0.3945 sec.
iter 830 || Loss: 9.9377 || 
timer: 0.3950 sec.
iter 840 || Loss: 8.9728 || 
timer: 0.4077 sec.
iter 850 || Loss: 9.9437 || 
timer: 0.3977 sec.
iter 860 || Loss: 9.7462 || 
timer: 0.3953 sec.
iter 870 || Loss: 8.7894 || 
timer: 0.3942 sec.
iter 880 || Loss: 8.7806 || 
timer: 0.4541 sec.
iter 890 || Loss: 9.0356 || 
timer: 0.8256 sec.
iter 900 || Loss: 9.3833 || 
timer: 0.4066 sec.
iter 910 || Loss: 8.7962 || 
timer: 0.3945 sec.
iter 920 || Loss: 9.1329 || 
timer: 0.3946 sec.
iter 930 || Loss: 8.4029 || 
timer: 0.3909 sec.
iter 940 || Loss: 9.4577 || 
timer: 0.3963 sec.
iter 950 || Loss: 9.5303 || 
timer: 0.3942 sec.
iter 960 || Loss: 9.7467 || 
timer: 0.3948 sec.
iter 970 || Loss: 9.6018 || 
timer: 0.4102 sec.
iter 980 || Loss: 9.7781 || 
timer: 0.3930 sec.
iter 990 || Loss: 8.9799 || 
timer: 0.5740 sec.
iter 1000 || Loss: 9.2098 || 
('Saving state, iter:', 1000)
timer: 0.3968 sec.
iter 1010 || Loss: 9.3758 || 
timer: 0.4070 sec.
iter 1020 || Loss: 9.5018 || 
timer: 0.4029 sec.
iter 1030 || Loss: 9.6041 || 
timer: 0.3954 sec.
iter 1040 || Loss: 8.4924 || 
timer: 0.3975 sec.
iter 1050 || Loss: 8.6697 || 
timer: 0.3967 sec.
iter 1060 || Loss: 8.9024 || 
timer: 0.4086 sec.
iter 1070 || Loss: 8.5573 || 
timer: 0.3972 sec.
iter 1080 || Loss: 8.5137 || 
timer: 0.3943 sec.
iter 1090 || Loss: 8.7303 || 
timer: 0.4195 sec.
iter 1100 || Loss: 9.2187 || 
timer: 0.4041 sec.
iter 1110 || Loss: 8.8318 || 
timer: 0.6714 sec.
iter 1120 || Loss: 9.4903 || 
timer: 0.3902 sec.
iter 1130 || Loss: 8.6431 || 
timer: 0.7179 sec.
iter 1140 || Loss: 8.7400 || 
timer: 0.6207 sec.
iter 1150 || Loss: 9.7317 || 
timer: 0.3975 sec.
iter 1160 || Loss: 8.0283 || 
timer: 0.3937 sec.
iter 1170 || Loss: 9.1623 || 
timer: 0.4070 sec.
iter 1180 || Loss: 9.5062 || 
timer: 0.6429 sec.
iter 1190 || Loss: 8.2397 || 
timer: 0.4111 sec.
iter 1200 || Loss: 8.5204 || 
timer: 0.3946 sec.
iter 1210 || Loss: 8.9155 || 
timer: 0.9687 sec.
iter 1220 || Loss: 8.4900 || 
timer: 0.3897 sec.
iter 1230 || Loss: 9.1357 || 
timer: 0.3918 sec.
iter 1240 || Loss: 8.6851 || 
timer: 0.3918 sec.
iter 1250 || Loss: 9.1920 || 
timer: 0.3951 sec.
iter 1260 || Loss: 9.5256 || 
timer: 0.4051 sec.
iter 1270 || Loss: 8.3171 || 
timer: 0.3917 sec.
iter 1280 || Loss: 7.7276 || 
timer: 0.4370 sec.
iter 1290 || Loss: 8.7777 || 
timer: 0.6428 sec.
iter 1300 || Loss: 8.8331 || 
timer: 0.6580 sec.
iter 1310 || Loss: 8.9386 || 
timer: 0.4260 sec.
iter 1320 || Loss: 7.9298 || 
timer: 0.3908 sec.
iter 1330 || Loss: 8.8220 || 
timer: 0.4045 sec.
iter 1340 || Loss: 8.7557 || 
timer: 0.3900 sec.
iter 1350 || Loss: 8.2806 || 
timer: 0.4086 sec.
iter 1360 || Loss: 8.3957 || 
timer: 0.7537 sec.
iter 1370 || Loss: 9.4312 || 
timer: 0.3922 sec.
iter 1380 || Loss: 9.2727 || 
timer: 0.3928 sec.
iter 1390 || Loss: 9.4188 || 
timer: 0.3911 sec.
iter 1400 || Loss: 7.9814 || 
timer: 0.3876 sec.
iter 1410 || Loss: 8.7305 || 
timer: 0.4039 sec.
iter 1420 || Loss: 9.5717 || 
timer: 0.3876 sec.
iter 1430 || Loss: 8.7028 || 
timer: 0.3918 sec.
iter 1440 || Loss: 9.0719 || 
timer: 0.3926 sec.
iter 1450 || Loss: 8.1424 || 
timer: 0.4012 sec.
iter 1460 || Loss: 8.3017 || 
timer: 0.3945 sec.
iter 1470 || Loss: 8.5087 || 
timer: 0.3898 sec.
iter 1480 || Loss: 8.3321 || 
timer: 0.3943 sec.
iter 1490 || Loss: 9.4132 || 
timer: 0.3946 sec.
iter 1500 || Loss: 8.4251 || 
('Saving state, iter:', 1500)
timer: 0.3961 sec.
iter 1510 || Loss: 9.6553 || 
timer: 0.3955 sec.
iter 1520 || Loss: 9.3730 || 
timer: 0.4031 sec.
iter 1530 || Loss: 8.1772 || 
timer: 0.6262 sec.
iter 1540 || Loss: 8.0853 || 
timer: 0.5274 sec.
iter 1550 || Loss: 8.8555 || 
timer: 0.4687 sec.
iter 1560 || Loss: 8.1518 || 
timer: 0.4186 sec.
iter 1570 || Loss: 8.0649 || 
timer: 0.3875 sec.
iter 1580 || Loss: 8.1944 || 
timer: 0.4066 sec.
iter 1590 || Loss: 8.9614 || 
timer: 0.8523 sec.
iter 1600 || Loss: 9.3087 || 
timer: 0.3938 sec.
iter 1610 || Loss: 7.5852 || 
timer: 0.3957 sec.
iter 1620 || Loss: 8.1100 || 
timer: 0.3909 sec.
iter 1630 || Loss: 8.4115 || 
timer: 0.3938 sec.
iter 1640 || Loss: 7.9638 || 
timer: 0.3930 sec.
iter 1650 || Loss: 8.6340 || 
timer: 0.3923 sec.
iter 1660 || Loss: 8.2512 || 
timer: 0.3950 sec.
iter 1670 || Loss: 8.7226 || 
timer: 0.4067 sec.
iter 1680 || Loss: 9.2965 || 
timer: 0.4974 sec.
iter 1690 || Loss: 9.9653 || 
timer: 0.4065 sec.
iter 1700 || Loss: 8.7413 || 
timer: 0.4011 sec.
iter 1710 || Loss: 8.9510 || 
timer: 0.3891 sec.
iter 1720 || Loss: 8.9543 || 
timer: 0.3936 sec.
iter 1730 || Loss: 8.3602 || 
timer: 0.4010 sec.
iter 1740 || Loss: 7.8992 || 
timer: 0.8521 sec.
iter 1750 || Loss: 8.0661 || 
timer: 0.3941 sec.
iter 1760 || Loss: 9.2633 || 
timer: 0.4125 sec.
iter 1770 || Loss: 8.5307 || 
timer: 0.3922 sec.
iter 1780 || Loss: 8.6527 || 
timer: 0.3882 sec.
iter 1790 || Loss: 7.9111 || 
timer: 0.3900 sec.
iter 1800 || Loss: 9.6690 || 
timer: 0.3927 sec.
iter 1810 || Loss: 8.4697 || 
timer: 0.8328 sec.
iter 1820 || Loss: 9.4813 || 
timer: 0.3928 sec.
iter 1830 || Loss: 7.9524 || 
timer: 0.4248 sec.
iter 1840 || Loss: 9.9414 || 
timer: 0.3929 sec.
iter 1850 || Loss: 9.3278 || 
timer: 0.3904 sec.
iter 1860 || Loss: 8.5016 || 
timer: 0.6560 sec.
iter 1870 || Loss: 7.5994 || 
timer: 0.3955 sec.
iter 1880 || Loss: 7.8469 || 
timer: 0.3949 sec.
iter 1890 || Loss: 8.3434 || 
timer: 0.3969 sec.
iter 1900 || Loss: 8.7661 || 
timer: 0.3937 sec.
iter 1910 || Loss: 9.6407 || 
timer: 0.4052 sec.
iter 1920 || Loss: 8.3648 || 
timer: 0.3918 sec.
iter 1930 || Loss: 8.8845 || 
timer: 0.4704 sec.
iter 1940 || Loss: 8.5954 || 
timer: 0.3936 sec.
iter 1950 || Loss: 9.9079 || 
timer: 0.3960 sec.
iter 1960 || Loss: 8.5844 || 
timer: 0.4047 sec.
iter 1970 || Loss: 8.5471 || 
timer: 0.4047 sec.
iter 1980 || Loss: 8.2098 || 
timer: 0.4096 sec.
iter 1990 || Loss: 8.3019 || 
timer: 0.3901 sec.
iter 2000 || Loss: 8.4763 || 
('Saving state, iter:', 2000)
timer: 0.3971 sec.
iter 2010 || Loss: 7.9873 || 
timer: 0.4064 sec.
iter 2020 || Loss: 8.4419 || 
timer: 0.3957 sec.
iter 2030 || Loss: 8.0662 || 
timer: 0.2398 sec.
iter 2040 || Loss: 7.9992 || 
timer: 0.3900 sec.
iter 2050 || Loss: 8.0001 || 
timer: 0.3961 sec.
iter 2060 || Loss: 7.4570 || 
timer: 0.3952 sec.
iter 2070 || Loss: 7.8983 || 
timer: 0.3933 sec.
iter 2080 || Loss: 8.4688 || 
timer: 0.3954 sec.
iter 2090 || Loss: 9.0908 || 
timer: 0.3980 sec.
iter 2100 || Loss: 7.8131 || 
timer: 0.4071 sec.
iter 2110 || Loss: 7.8838 || 
timer: 0.3934 sec.
iter 2120 || Loss: 8.5613 || 
timer: 0.6159 sec.
iter 2130 || Loss: 7.7225 || 
timer: 0.3914 sec.
iter 2140 || Loss: 8.5738 || 
timer: 0.4080 sec.
iter 2150 || Loss: 8.5806 || 
timer: 0.7200 sec.
iter 2160 || Loss: 9.1820 || 
timer: 0.5877 sec.
iter 2170 || Loss: 7.7548 || 
timer: 0.5317 sec.
iter 2180 || Loss: 7.6913 || 
timer: 0.3893 sec.
iter 2190 || Loss: 8.1967 || 
timer: 0.3928 sec.
iter 2200 || Loss: 8.1821 || 
timer: 0.3935 sec.
iter 2210 || Loss: 8.0912 || 
timer: 0.4122 sec.
iter 2220 || Loss: 7.9871 || 
timer: 0.4035 sec.
iter 2230 || Loss: 7.8176 || 
timer: 0.3948 sec.
iter 2240 || Loss: 8.1454 || 
timer: 0.3933 sec.
iter 2250 || Loss: 8.6798 || 
timer: 0.4121 sec.
iter 2260 || Loss: 7.9723 || 
timer: 0.3904 sec.
iter 2270 || Loss: 7.5564 || 
timer: 0.4024 sec.
iter 2280 || Loss: 8.4775 || 
timer: 0.3921 sec.
iter 2290 || Loss: 9.0095 || 
timer: 0.3956 sec.
iter 2300 || Loss: 8.6884 || 
timer: 0.3943 sec.
iter 2310 || Loss: 7.8108 || 
timer: 0.3932 sec.
iter 2320 || Loss: 9.6347 || 
timer: 0.3974 sec.
iter 2330 || Loss: 8.2039 || 
timer: 0.4197 sec.
iter 2340 || Loss: 7.9235 || 
timer: 0.3942 sec.
iter 2350 || Loss: 7.7712 || 
timer: 0.4036 sec.
iter 2360 || Loss: 8.0940 || 
timer: 0.4071 sec.
iter 2370 || Loss: 8.0037 || 
timer: 0.3918 sec.
iter 2380 || Loss: 7.6964 || 
timer: 0.3920 sec.
iter 2390 || Loss: 7.8854 || 
timer: 0.4295 sec.
iter 2400 || Loss: 7.5024 || 
timer: 0.4031 sec.
iter 2410 || Loss: 7.9644 || 
timer: 0.3956 sec.
iter 2420 || Loss: 8.2156 || 
timer: 0.8318 sec.
iter 2430 || Loss: 7.8123 || 
timer: 0.4860 sec.
iter 2440 || Loss: 7.9987 || 
timer: 0.3952 sec.
iter 2450 || Loss: 8.1020 || 
timer: 0.3949 sec.
iter 2460 || Loss: 8.8228 || 
timer: 0.4066 sec.
iter 2470 || Loss: 7.9550 || 
timer: 0.6035 sec.
iter 2480 || Loss: 7.6348 || 
timer: 0.4087 sec.
iter 2490 || Loss: 8.7950 || 
timer: 0.3983 sec.
iter 2500 || Loss: 8.3828 || 
('Saving state, iter:', 2500)
timer: 0.8082 sec.
iter 2510 || Loss: 7.9064 || 
timer: 0.4126 sec.
iter 2520 || Loss: 7.6965 || 
timer: 0.3921 sec.
iter 2530 || Loss: 8.2313 || 
timer: 0.4041 sec.
iter 2540 || Loss: 7.8320 || 
timer: 0.3934 sec.
iter 2550 || Loss: 8.2082 || 
timer: 0.4061 sec.
iter 2560 || Loss: 7.5839 || 
timer: 0.4083 sec.
iter 2570 || Loss: 8.1814 || 
timer: 0.4004 sec.
iter 2580 || Loss: 8.3713 || 
timer: 0.5686 sec.
iter 2590 || Loss: 9.1486 || 
timer: 0.8799 sec.
iter 2600 || Loss: 8.8115 || 
timer: 0.3975 sec.
iter 2610 || Loss: 7.7309 || 
timer: 0.3932 sec.
iter 2620 || Loss: 7.3486 || 
timer: 0.3910 sec.
iter 2630 || Loss: 7.7184 || 
timer: 0.3930 sec.
iter 2640 || Loss: 8.5081 || 
timer: 0.3946 sec.
iter 2650 || Loss: 7.1699 || 
timer: 0.4678 sec.
iter 2660 || Loss: 9.2735 || 
timer: 0.4466 sec.
iter 2670 || Loss: 8.1340 || 
timer: 0.4078 sec.
iter 2680 || Loss: 8.0273 || 
timer: 0.4109 sec.
iter 2690 || Loss: 7.1556 || 
timer: 0.7766 sec.
iter 2700 || Loss: 8.1754 || 
timer: 0.4146 sec.
iter 2710 || Loss: 8.9319 || 
timer: 0.3925 sec.
iter 2720 || Loss: 8.0105 || 
timer: 0.3950 sec.
iter 2730 || Loss: 8.5401 || 
timer: 0.4190 sec.
iter 2740 || Loss: 8.8982 || 
timer: 0.3905 sec.
iter 2750 || Loss: 7.0830 || 
timer: 0.3980 sec.
iter 2760 || Loss: 6.9319 || 
timer: 0.3968 sec.
iter 2770 || Loss: 8.2031 || 
timer: 0.4109 sec.
iter 2780 || Loss: 7.6923 || 
timer: 0.3915 sec.
iter 2790 || Loss: 7.8077 || 
timer: 0.4831 sec.
iter 2800 || Loss: 7.8775 || 
timer: 0.4019 sec.
iter 2810 || Loss: 8.0729 || 
timer: 0.3930 sec.
iter 2820 || Loss: 8.0639 || 
timer: 0.3884 sec.
iter 2830 || Loss: 7.8418 || 
timer: 0.3993 sec.
iter 2840 || Loss: 7.5985 || 
timer: 0.4095 sec.
iter 2850 || Loss: 8.3533 || 
timer: 0.5918 sec.
iter 2860 || Loss: 8.1739 || 
timer: 0.3928 sec.
iter 2870 || Loss: 8.1086 || 
timer: 0.4208 sec.
iter 2880 || Loss: 7.9358 || 
timer: 0.6495 sec.
iter 2890 || Loss: 7.9737 || 
timer: 0.5481 sec.
iter 2900 || Loss: 7.8090 || 
timer: 0.4334 sec.
iter 2910 || Loss: 8.3556 || 
timer: 0.3950 sec.
iter 2920 || Loss: 8.5988 || 
timer: 0.4060 sec.
iter 2930 || Loss: 8.0615 || 
timer: 0.3927 sec.
iter 2940 || Loss: 7.9528 || 
timer: 0.4759 sec.
iter 2950 || Loss: 7.8002 || 
timer: 0.4050 sec.
iter 2960 || Loss: 8.3465 || 
timer: 0.4085 sec.
iter 2970 || Loss: 7.3839 || 
timer: 0.3931 sec.
iter 2980 || Loss: 7.0433 || 
timer: 0.4174 sec.
iter 2990 || Loss: 8.4536 || 
timer: 0.4084 sec.
iter 3000 || Loss: 7.7277 || 
('Saving state, iter:', 3000)
timer: 0.3903 sec.
iter 3010 || Loss: 7.2566 || 
timer: 0.4066 sec.
iter 3020 || Loss: 7.7042 || 
timer: 0.4209 sec.
iter 3030 || Loss: 8.0063 || 
timer: 0.3965 sec.
iter 3040 || Loss: 9.0749 || 
timer: 0.4051 sec.
iter 3050 || Loss: 7.4591 || 
timer: 0.3906 sec.
iter 3060 || Loss: 7.7924 || 
timer: 0.4012 sec.
iter 3070 || Loss: 7.8810 || 
timer: 0.8246 sec.
iter 3080 || Loss: 8.0541 || 
timer: 0.3937 sec.
iter 3090 || Loss: 8.6266 || 
timer: 0.3929 sec.
iter 3100 || Loss: 7.3767 || 
timer: 0.4115 sec.
iter 3110 || Loss: 7.4557 || 
timer: 0.4801 sec.
iter 3120 || Loss: 7.2536 || 
timer: 0.3926 sec.
iter 3130 || Loss: 7.6394 || 
timer: 0.3951 sec.
iter 3140 || Loss: 7.4566 || 
timer: 0.3864 sec.
iter 3150 || Loss: 8.3840 || 
timer: 0.4074 sec.
iter 3160 || Loss: 7.2852 || 
timer: 0.4005 sec.
iter 3170 || Loss: 7.8834 || 
timer: 0.3969 sec.
iter 3180 || Loss: 7.2426 || 
timer: 0.6908 sec.
iter 3190 || Loss: 7.7002 || 
timer: 0.7325 sec.
iter 3200 || Loss: 8.0430 || 
timer: 0.6376 sec.
iter 3210 || Loss: 7.5348 || 
timer: 0.4010 sec.
iter 3220 || Loss: 8.5079 || 
timer: 0.9381 sec.
iter 3230 || Loss: 7.6916 || 
timer: 0.3942 sec.
iter 3240 || Loss: 7.4157 || 
timer: 0.3974 sec.
iter 3250 || Loss: 7.2892 || 
timer: 0.3917 sec.
iter 3260 || Loss: 7.6312 || 
timer: 0.3981 sec.
iter 3270 || Loss: 6.8316 || 
timer: 0.8941 sec.
iter 3280 || Loss: 8.6061 || 
timer: 0.3906 sec.
iter 3290 || Loss: 8.3662 || 
timer: 0.4078 sec.
iter 3300 || Loss: 7.6882 || 
timer: 0.3918 sec.
iter 3310 || Loss: 7.2864 || 
timer: 0.4073 sec.
iter 3320 || Loss: 7.9714 || 
timer: 0.3953 sec.
iter 3330 || Loss: 7.4064 || 
timer: 0.4036 sec.
iter 3340 || Loss: 7.0298 || 
timer: 0.8093 sec.
iter 3350 || Loss: 6.9870 || 
timer: 0.3958 sec.
iter 3360 || Loss: 8.2117 || 
timer: 0.3940 sec.
iter 3370 || Loss: 7.6136 || 
timer: 0.3937 sec.
iter 3380 || Loss: 8.8162 || 
timer: 0.4050 sec.
iter 3390 || Loss: 7.8830 || 
timer: 0.3949 sec.
iter 3400 || Loss: 9.0881 || 
timer: 0.5067 sec.
iter 3410 || Loss: 7.4603 || 
timer: 0.3919 sec.
iter 3420 || Loss: 8.2473 || 
timer: 0.5773 sec.
iter 3430 || Loss: 7.3824 || 
timer: 0.3944 sec.
iter 3440 || Loss: 8.5388 || 
timer: 0.3951 sec.
iter 3450 || Loss: 7.5187 || 
timer: 0.4015 sec.
iter 3460 || Loss: 8.1282 || 
timer: 0.3900 sec.
iter 3470 || Loss: 7.7884 || 
timer: 0.6697 sec.
iter 3480 || Loss: 7.7590 || 
timer: 0.3956 sec.
iter 3490 || Loss: 8.4682 || 
timer: 0.3935 sec.
iter 3500 || Loss: 7.2701 || 
('Saving state, iter:', 3500)
timer: 0.5021 sec.
iter 3510 || Loss: 7.4356 || 
timer: 0.5775 sec.
iter 3520 || Loss: 7.1521 || 
timer: 0.4033 sec.
iter 3530 || Loss: 8.2951 || 
timer: 0.3941 sec.
iter 3540 || Loss: 8.3542 || 
timer: 0.3925 sec.
iter 3550 || Loss: 8.5516 || 
timer: 0.3952 sec.
iter 3560 || Loss: 8.0736 || 
timer: 0.4104 sec.
iter 3570 || Loss: 6.9348 || 
timer: 0.3966 sec.
iter 3580 || Loss: 7.4837 || 
timer: 0.3960 sec.
iter 3590 || Loss: 7.0031 || 
timer: 0.3996 sec.
iter 3600 || Loss: 8.3974 || 
timer: 0.2368 sec.
iter 3610 || Loss: 6.8353 || 
timer: 0.6730 sec.
iter 3620 || Loss: 7.0188 || 
timer: 0.5954 sec.
iter 3630 || Loss: 8.0763 || 
timer: 0.4446 sec.
iter 3640 || Loss: 7.0271 || 
timer: 0.4151 sec.
iter 3650 || Loss: 6.9822 || 
timer: 0.4057 sec.
iter 3660 || Loss: 7.8593 || 
timer: 0.4213 sec.
iter 3670 || Loss: 7.7055 || 
timer: 0.3906 sec.
iter 3680 || Loss: 7.6783 || 
timer: 0.7649 sec.
iter 3690 || Loss: 7.3439 || 
timer: 0.3949 sec.
iter 3700 || Loss: 7.8967 || 
timer: 0.4069 sec.
iter 3710 || Loss: 7.8810 || 
timer: 0.3951 sec.
iter 3720 || Loss: 6.9324 || 
timer: 0.3925 sec.
iter 3730 || Loss: 7.0724 || 
timer: 0.3906 sec.
iter 3740 || Loss: 7.7192 || 
timer: 0.4082 sec.
iter 3750 || Loss: 7.5585 || 
timer: 0.6323 sec.
iter 3760 || Loss: 8.4365 || 
timer: 0.4080 sec.
iter 3770 || Loss: 7.7734 || 
timer: 0.4249 sec.
iter 3780 || Loss: 6.9497 || 
timer: 0.4034 sec.
iter 3790 || Loss: 6.5804 || 
timer: 0.4029 sec.
iter 3800 || Loss: 7.1080 || 
timer: 0.3930 sec.
iter 3810 || Loss: 7.3928 || 
timer: 0.3932 sec.
iter 3820 || Loss: 7.8215 || 
timer: 0.3937 sec.
iter 3830 || Loss: 7.7587 || 
timer: 0.3901 sec.
iter 3840 || Loss: 7.5349 || 
timer: 0.4370 sec.
iter 3850 || Loss: 7.8237 || 
timer: 0.3899 sec.
iter 3860 || Loss: 7.3300 || 
timer: 0.7578 sec.
iter 3870 || Loss: 7.0807 || 
timer: 0.3922 sec.
iter 3880 || Loss: 6.1868 || 
timer: 0.4041 sec.
iter 3890 || Loss: 7.2264 || 
timer: 0.4111 sec.
iter 3900 || Loss: 7.2829 || 
timer: 0.3994 sec.
iter 3910 || Loss: 7.6458 || 
timer: 0.5911 sec.
iter 3920 || Loss: 7.1718 || 
timer: 0.4031 sec.
iter 3930 || Loss: 7.8302 || 
timer: 0.4392 sec.
iter 3940 || Loss: 6.3729 || 
timer: 0.3910 sec.
iter 3950 || Loss: 7.8053 || 
timer: 0.3916 sec.
iter 3960 || Loss: 7.9368 || 
timer: 0.7333 sec.
iter 3970 || Loss: 7.4820 || 
timer: 0.7399 sec.
iter 3980 || Loss: 8.4661 || 
timer: 0.6410 sec.
iter 3990 || Loss: 7.6145 || 
timer: 0.4051 sec.
iter 4000 || Loss: 6.6968 || 
('Saving state, iter:', 4000)
timer: 0.4063 sec.
iter 4010 || Loss: 7.5582 || 
timer: 0.4052 sec.
iter 4020 || Loss: 7.6326 || 
timer: 0.3915 sec.
iter 4030 || Loss: 7.7704 || 
timer: 0.3943 sec.
iter 4040 || Loss: 7.4641 || 
timer: 0.5443 sec.
iter 4050 || Loss: 8.5245 || 
timer: 0.3957 sec.
iter 4060 || Loss: 8.0995 || 
timer: 0.4025 sec.
iter 4070 || Loss: 7.4679 || 
timer: 0.3942 sec.
iter 4080 || Loss: 7.3252 || 
timer: 0.3912 sec.
iter 4090 || Loss: 7.7800 || 
timer: 0.4686 sec.
iter 4100 || Loss: 7.7406 || 
timer: 0.4064 sec.
iter 4110 || Loss: 7.8639 || 
timer: 0.3944 sec.
iter 4120 || Loss: 6.9874 || 
timer: 0.3933 sec.
iter 4130 || Loss: 7.6023 || 
timer: 0.3925 sec.
iter 4140 || Loss: 7.6443 || 
timer: 0.3947 sec.
iter 4150 || Loss: 7.6323 || 
timer: 0.4044 sec.
iter 4160 || Loss: 7.5008 || 
timer: 0.4096 sec.
iter 4170 || Loss: 7.6636 || 
timer: 0.7557 sec.
iter 4180 || Loss: 7.4562 || 
timer: 0.3959 sec.
iter 4190 || Loss: 6.9918 || 
timer: 0.3907 sec.
iter 4200 || Loss: 7.4600 || 
timer: 0.6223 sec.
iter 4210 || Loss: 7.8168 || 
timer: 0.3898 sec.
iter 4220 || Loss: 7.8522 || 
timer: 0.3921 sec.
iter 4230 || Loss: 8.2292 || 
timer: 0.4287 sec.
iter 4240 || Loss: 7.3291 || 
timer: 0.3935 sec.
iter 4250 || Loss: 7.0585 || 
timer: 0.4026 sec.
iter 4260 || Loss: 6.8945 || 
timer: 0.4087 sec.
iter 4270 || Loss: 6.9427 || 
timer: 0.3902 sec.
iter 4280 || Loss: 6.6781 || 
timer: 0.3879 sec.
iter 4290 || Loss: 7.5401 || 
timer: 0.3937 sec.
iter 4300 || Loss: 7.1955 || 
timer: 0.3935 sec.
iter 4310 || Loss: 6.2911 || 
timer: 0.3932 sec.
iter 4320 || Loss: 6.3912 || 
timer: 0.5799 sec.
iter 4330 || Loss: 6.5660 || 
timer: 0.3914 sec.
iter 4340 || Loss: 7.4986 || 
timer: 0.3941 sec.
iter 4350 || Loss: 7.2198 || 
timer: 0.3969 sec.
iter 4360 || Loss: 7.4602 || 
timer: 0.3926 sec.
iter 4370 || Loss: 7.2231 || 
timer: 0.6141 sec.
iter 4380 || Loss: 7.1797 || 
timer: 0.3907 sec.
iter 4390 || Loss: 6.5578 || 
timer: 0.9101 sec.
iter 4400 || Loss: 7.7073 || 
timer: 0.3922 sec.
iter 4410 || Loss: 6.9907 || 
timer: 0.3946 sec.
iter 4420 || Loss: 7.6063 || 
timer: 0.3912 sec.
iter 4430 || Loss: 8.1698 || 
timer: 0.4013 sec.
iter 4440 || Loss: 7.9400 || 
timer: 0.3925 sec.
iter 4450 || Loss: 7.9007 || 
timer: 0.3961 sec.
iter 4460 || Loss: 7.3095 || 
timer: 0.3965 sec.
iter 4470 || Loss: 6.6554 || 
timer: 0.3904 sec.
iter 4480 || Loss: 7.2025 || 
timer: 0.3938 sec.
iter 4490 || Loss: 6.5836 || 
timer: 0.7386 sec.
iter 4500 || Loss: 6.8619 || 
('Saving state, iter:', 4500)
timer: 0.4088 sec.
iter 4510 || Loss: 6.3869 || 
timer: 0.3933 sec.
iter 4520 || Loss: 6.7255 || 
timer: 0.4071 sec.
iter 4530 || Loss: 7.5610 || 
timer: 0.3942 sec.
iter 4540 || Loss: 7.3287 || 
timer: 0.3926 sec.
iter 4550 || Loss: 7.0372 || 
timer: 0.3941 sec.
iter 4560 || Loss: 7.6113 || 
timer: 0.8735 sec.
iter 4570 || Loss: 6.8568 || 
timer: 0.3966 sec.
iter 4580 || Loss: 7.1846 || 
timer: 0.3943 sec.
iter 4590 || Loss: 6.4613 || 
timer: 0.3969 sec.
iter 4600 || Loss: 7.4364 || 
timer: 0.4033 sec.
iter 4610 || Loss: 6.5048 || 
timer: 0.5312 sec.
iter 4620 || Loss: 7.7165 || 
timer: 0.3962 sec.
iter 4630 || Loss: 7.2411 || 
timer: 0.3932 sec.
iter 4640 || Loss: 7.3788 || 
timer: 0.3940 sec.
iter 4650 || Loss: 7.5160 || 
timer: 0.3962 sec.
iter 4660 || Loss: 8.1827 || 
timer: 0.3951 sec.
iter 4670 || Loss: 7.5826 || 
timer: 0.4302 sec.
iter 4680 || Loss: 6.7570 || 
timer: 0.3927 sec.
iter 4690 || Loss: 7.6405 || 
timer: 0.4033 sec.
iter 4700 || Loss: 7.0512 || 
timer: 0.3937 sec.
iter 4710 || Loss: 6.3775 || 
timer: 0.3936 sec.
iter 4720 || Loss: 6.8113 || 
timer: 0.4035 sec.
iter 4730 || Loss: 7.8053 || 
timer: 0.4921 sec.
iter 4740 || Loss: 6.2930 || 
timer: 0.4099 sec.
iter 4750 || Loss: 7.6869 || 
timer: 0.4068 sec.
iter 4760 || Loss: 6.9403 || 
timer: 0.5309 sec.
iter 4770 || Loss: 6.5230 || 
timer: 0.3927 sec.
iter 4780 || Loss: 7.2102 || 
timer: 0.3937 sec.
iter 4790 || Loss: 7.1854 || 
timer: 0.3960 sec.
iter 4800 || Loss: 7.9595 || 
timer: 0.4084 sec.
iter 4810 || Loss: 6.7830 || 
timer: 0.4014 sec.
iter 4820 || Loss: 6.8762 || 
timer: 0.4551 sec.
iter 4830 || Loss: 7.2637 || 
timer: 0.4172 sec.
iter 4840 || Loss: 7.6688 || 
timer: 0.3975 sec.
iter 4850 || Loss: 7.2834 || 
timer: 0.3882 sec.
iter 4860 || Loss: 7.3388 || 
timer: 0.4082 sec.
iter 4870 || Loss: 7.4117 || 
timer: 0.3962 sec.
iter 4880 || Loss: 7.2238 || 
timer: 0.4076 sec.
iter 4890 || Loss: 6.0697 || 
timer: 0.7037 sec.
iter 4900 || Loss: 6.6256 || 
timer: 0.3955 sec.
iter 4910 || Loss: 8.0862 || 
timer: 0.6726 sec.
iter 4920 || Loss: 6.3801 || 
timer: 0.4042 sec.
iter 4930 || Loss: 6.9866 || 
timer: 0.3977 sec.
iter 4940 || Loss: 7.1453 || 
timer: 0.4132 sec.
iter 4950 || Loss: 7.1473 || 
timer: 0.4035 sec.
iter 4960 || Loss: 6.0052 || 
timer: 0.3926 sec.
iter 4970 || Loss: 7.1858 || 
timer: 0.3934 sec.
iter 4980 || Loss: 7.0164 || 
timer: 0.4344 sec.
iter 4990 || Loss: 7.2761 || 
timer: 0.5993 sec.
iter 5000 || Loss: 6.9755 || 
('Saving state, iter:', 5000)
timer: 0.5476 sec.
iter 5010 || Loss: 6.4864 || 
timer: 0.4370 sec.
iter 5020 || Loss: 8.2190 || 
timer: 0.3934 sec.
iter 5030 || Loss: 6.7012 || 
timer: 0.3997 sec.
iter 5040 || Loss: 7.4695 || 
timer: 0.4053 sec.
iter 5050 || Loss: 7.9684 || 
timer: 0.3892 sec.
iter 5060 || Loss: 6.9746 || 
timer: 0.3988 sec.
iter 5070 || Loss: 6.9671 || 
timer: 0.4044 sec.
iter 5080 || Loss: 6.1080 || 
timer: 0.6190 sec.
iter 5090 || Loss: 7.2190 || 
timer: 0.4036 sec.
iter 5100 || Loss: 6.2722 || 
timer: 0.6133 sec.
iter 5110 || Loss: 6.8673 || 
timer: 0.6582 sec.
iter 5120 || Loss: 6.3921 || 
timer: 0.3913 sec.
iter 5130 || Loss: 6.4200 || 
timer: 0.4008 sec.
iter 5140 || Loss: 6.3793 || 
timer: 0.9219 sec.
iter 5150 || Loss: 6.6332 || 
timer: 0.3962 sec.
iter 5160 || Loss: 6.9997 || 
timer: 0.3938 sec.
iter 5170 || Loss: 6.3360 || 
timer: 0.2411 sec.
iter 5180 || Loss: 7.8645 || 
timer: 0.3946 sec.
iter 5190 || Loss: 7.5113 || 
timer: 0.4727 sec.
iter 5200 || Loss: 5.8002 || 
timer: 0.4025 sec.
iter 5210 || Loss: 6.0545 || 
timer: 0.3930 sec.
iter 5220 || Loss: 7.3782 || 
timer: 0.4270 sec.
iter 5230 || Loss: 6.7367 || 
timer: 0.3946 sec.
iter 5240 || Loss: 7.0729 || 
timer: 0.7054 sec.
iter 5250 || Loss: 7.0972 || 
timer: 0.3918 sec.
iter 5260 || Loss: 7.8998 || 
timer: 0.3942 sec.
iter 5270 || Loss: 6.9657 || 
timer: 0.3935 sec.
iter 5280 || Loss: 6.6263 || 
timer: 0.3940 sec.
iter 5290 || Loss: 6.8375 || 
timer: 0.3915 sec.
iter 5300 || Loss: 6.7042 || 
timer: 0.3927 sec.
iter 5310 || Loss: 7.0152 || 
timer: 0.3974 sec.
iter 5320 || Loss: 7.9709 || 
timer: 0.3977 sec.
iter 5330 || Loss: 7.1286 || 
timer: 0.4135 sec.
iter 5340 || Loss: 7.3496 || 
timer: 0.3962 sec.
iter 5350 || Loss: 6.9662 || 
timer: 0.4003 sec.
iter 5360 || Loss: 6.4701 || 
timer: 0.3964 sec.
iter 5370 || Loss: 5.9871 || 
timer: 0.9504 sec.
iter 5380 || Loss: 7.5848 || 
timer: 0.3945 sec.
iter 5390 || Loss: 6.9211 || 
timer: 0.3906 sec.
iter 5400 || Loss: 7.3808 || 
timer: 0.3950 sec.
iter 5410 || Loss: 6.9684 || 
timer: 0.3953 sec.
iter 5420 || Loss: 6.6519 || 
timer: 0.3907 sec.
iter 5430 || Loss: 7.1062 || 
timer: 0.4138 sec.
iter 5440 || Loss: 7.1170 || 
timer: 0.3967 sec.
iter 5450 || Loss: 6.2991 || 
timer: 0.4275 sec.
iter 5460 || Loss: 7.4422 || 
timer: 0.4003 sec.
iter 5470 || Loss: 6.3761 || 
timer: 0.4341 sec.
iter 5480 || Loss: 7.8949 || 
timer: 0.9572 sec.
iter 5490 || Loss: 6.8671 || 
timer: 0.4092 sec.
iter 5500 || Loss: 7.0522 || 
('Saving state, iter:', 5500)
timer: 0.6248 sec.
iter 5510 || Loss: 7.9776 || 
timer: 0.3937 sec.
iter 5520 || Loss: 6.6943 || 
timer: 0.3914 sec.
iter 5530 || Loss: 7.2982 || 
timer: 0.3920 sec.
iter 5540 || Loss: 6.8362 || 
timer: 0.3925 sec.
iter 5550 || Loss: 6.6265 || 
timer: 0.7494 sec.
iter 5560 || Loss: 6.9405 || 
timer: 0.3939 sec.
iter 5570 || Loss: 7.0662 || 
timer: 0.3991 sec.
iter 5580 || Loss: 6.6555 || 
timer: 0.4002 sec.
iter 5590 || Loss: 7.5363 || 
timer: 0.3944 sec.
iter 5600 || Loss: 6.4231 || 
timer: 0.6821 sec.
iter 5610 || Loss: 7.5701 || 
timer: 0.4154 sec.
iter 5620 || Loss: 6.0575 || 
timer: 0.3941 sec.
iter 5630 || Loss: 6.3109 || 
timer: 0.7622 sec.
iter 5640 || Loss: 6.3654 || 
timer: 0.4093 sec.
iter 5650 || Loss: 6.3284 || 
timer: 0.4044 sec.
iter 5660 || Loss: 6.4591 || 
timer: 0.4059 sec.
iter 5670 || Loss: 6.8383 || 
timer: 0.4165 sec.
iter 5680 || Loss: 7.7921 || 
timer: 0.4604 sec.
iter 5690 || Loss: 6.7423 || 
timer: 0.4047 sec.
iter 5700 || Loss: 6.5399 || 
timer: 0.6156 sec.
iter 5710 || Loss: 6.9565 || 
timer: 0.3992 sec.
iter 5720 || Loss: 6.7503 || 
timer: 0.3973 sec.
iter 5730 || Loss: 8.0027 || 
timer: 0.4079 sec.
iter 5740 || Loss: 7.1055 || 
timer: 0.4895 sec.
iter 5750 || Loss: 6.7999 || 
timer: 0.4043 sec.
iter 5760 || Loss: 6.6453 || 
timer: 0.6793 sec.
iter 5770 || Loss: 8.2015 || 
timer: 0.3933 sec.
iter 5780 || Loss: 6.7793 || 
timer: 0.4049 sec.
iter 5790 || Loss: 6.4091 || 
timer: 0.4004 sec.
iter 5800 || Loss: 7.8509 || 
timer: 0.4290 sec.
iter 5810 || Loss: 6.5137 || 
timer: 0.3941 sec.
iter 5820 || Loss: 7.3702 || 
timer: 0.9144 sec.
iter 5830 || Loss: 7.8255 || 
timer: 0.3975 sec.
iter 5840 || Loss: 6.5754 || 
timer: 0.4079 sec.
iter 5850 || Loss: 7.3026 || 
timer: 0.3967 sec.
iter 5860 || Loss: 6.4865 || 
timer: 0.3928 sec.
iter 5870 || Loss: 6.6670 || 
timer: 0.4132 sec.
iter 5880 || Loss: 6.4706 || 
timer: 0.7545 sec.
iter 5890 || Loss: 6.0964 || 
timer: 0.3921 sec.
iter 5900 || Loss: 6.1579 || 
timer: 0.3920 sec.
iter 5910 || Loss: 6.6980 || 
timer: 0.3925 sec.
iter 5920 || Loss: 6.5532 || 
timer: 0.4097 sec.
iter 5930 || Loss: 7.1471 || 
timer: 0.3953 sec.
iter 5940 || Loss: 6.0389 || 
timer: 0.4105 sec.
iter 5950 || Loss: 6.7048 || 
timer: 0.3920 sec.
iter 5960 || Loss: 6.9737 || 
timer: 0.4079 sec.
iter 5970 || Loss: 7.1073 || 
timer: 0.6632 sec.
iter 5980 || Loss: 7.3158 || 
timer: 0.4261 sec.
iter 5990 || Loss: 6.6610 || 
timer: 0.3919 sec.
iter 6000 || Loss: 7.0255 || 
('Saving state, iter:', 6000)
timer: 0.3939 sec.
iter 6010 || Loss: 6.5017 || 
timer: 0.4053 sec.
iter 6020 || Loss: 7.0516 || 
timer: 0.3939 sec.
iter 6030 || Loss: 6.7831 || 
timer: 0.4164 sec.
iter 6040 || Loss: 6.7889 || 
timer: 0.4132 sec.
iter 6050 || Loss: 7.5225 || 
timer: 0.4048 sec.
iter 6060 || Loss: 7.2974 || 
timer: 0.3927 sec.
iter 6070 || Loss: 6.4582 || 
timer: 0.3909 sec.
iter 6080 || Loss: 7.0301 || 
timer: 0.3970 sec.
iter 6090 || Loss: 6.9406 || 
timer: 0.3907 sec.
iter 6100 || Loss: 6.5778 || 
timer: 0.4223 sec.
iter 6110 || Loss: 6.0629 || 
timer: 0.3885 sec.
iter 6120 || Loss: 7.4477 || 
timer: 0.4118 sec.
iter 6130 || Loss: 6.1997 || 
timer: 0.3936 sec.
iter 6140 || Loss: 6.5250 || 
timer: 0.9354 sec.
iter 6150 || Loss: 5.9698 || 
timer: 0.4023 sec.
iter 6160 || Loss: 6.2071 || 
timer: 0.3900 sec.
iter 6170 || Loss: 6.2951 || 
timer: 0.3961 sec.
iter 6180 || Loss: 6.4242 || 
timer: 0.4048 sec.
iter 6190 || Loss: 6.3661 || 
timer: 0.8187 sec.
iter 6200 || Loss: 7.4987 || 
timer: 0.9605 sec.
iter 6210 || Loss: 7.1607 || 
timer: 0.8031 sec.
iter 6220 || Loss: 6.4252 || 
timer: 0.4326 sec.
iter 6230 || Loss: 6.5713 || 
timer: 0.4058 sec.
iter 6240 || Loss: 6.6749 || 
timer: 0.3967 sec.
iter 6250 || Loss: 6.6173 || 
timer: 0.4489 sec.
iter 6260 || Loss: 7.4907 || 
timer: 0.4115 sec.
iter 6270 || Loss: 6.8781 || 
timer: 0.4119 sec.
iter 6280 || Loss: 6.4589 || 
timer: 0.3928 sec.
iter 6290 || Loss: 6.9397 || 
timer: 0.4056 sec.
iter 6300 || Loss: 7.3295 || 
timer: 0.4124 sec.
iter 6310 || Loss: 6.7562 || 
timer: 0.3922 sec.
iter 6320 || Loss: 6.4038 || 
timer: 0.4142 sec.
iter 6330 || Loss: 6.9460 || 
timer: 0.3909 sec.
iter 6340 || Loss: 7.2001 || 
timer: 0.4248 sec.
iter 6350 || Loss: 6.9487 || 
timer: 0.3998 sec.
iter 6360 || Loss: 6.5149 || 
timer: 0.3925 sec.
iter 6370 || Loss: 7.5301 || 
timer: 0.3918 sec.
iter 6380 || Loss: 6.5329 || 
timer: 0.4493 sec.
iter 6390 || Loss: 7.9259 || 
timer: 0.4077 sec.
iter 6400 || Loss: 6.8901 || 
timer: 0.3959 sec.
iter 6410 || Loss: 6.0752 || 
timer: 0.3979 sec.
iter 6420 || Loss: 6.1984 || 
timer: 0.3914 sec.
iter 6430 || Loss: 7.1025 || 
timer: 0.3967 sec.
iter 6440 || Loss: 6.6333 || 
timer: 0.3930 sec.
iter 6450 || Loss: 6.1795 || 
timer: 0.3932 sec.
iter 6460 || Loss: 7.7300 || 
timer: 0.3905 sec.
iter 6470 || Loss: 7.5209 || 
timer: 0.3986 sec.
iter 6480 || Loss: 6.3908 || 
timer: 0.5167 sec.
iter 6490 || Loss: 7.8454 || 
timer: 0.3946 sec.
iter 6500 || Loss: 6.1597 || 
('Saving state, iter:', 6500)
timer: 0.3924 sec.
iter 6510 || Loss: 6.3108 || 
timer: 0.3952 sec.
iter 6520 || Loss: 6.6421 || 
timer: 0.3936 sec.
iter 6530 || Loss: 6.5817 || 
timer: 0.4058 sec.
iter 6540 || Loss: 7.6894 || 
timer: 0.6525 sec.
iter 6550 || Loss: 6.3694 || 
timer: 0.3974 sec.
iter 6560 || Loss: 7.1048 || 
timer: 0.3942 sec.
iter 6570 || Loss: 7.3516 || 
timer: 0.4016 sec.
iter 6580 || Loss: 6.8331 || 
timer: 0.3915 sec.
iter 6590 || Loss: 7.0249 || 
timer: 0.3942 sec.
iter 6600 || Loss: 6.3868 || 
timer: 0.4049 sec.
iter 6610 || Loss: 6.8142 || 
timer: 0.5422 sec.
iter 6620 || Loss: 7.4130 || 
timer: 0.3953 sec.
iter 6630 || Loss: 6.3994 || 
timer: 0.3940 sec.
iter 6640 || Loss: 6.1538 || 
timer: 0.8328 sec.
iter 6650 || Loss: 6.8396 || 
timer: 0.4099 sec.
iter 6660 || Loss: 7.8105 || 
timer: 0.3967 sec.
iter 6670 || Loss: 7.2119 || 
timer: 0.3933 sec.
iter 6680 || Loss: 6.4594 || 
timer: 0.4077 sec.
iter 6690 || Loss: 6.8724 || 
timer: 0.3946 sec.
iter 6700 || Loss: 7.0159 || 
timer: 0.4657 sec.
iter 6710 || Loss: 6.2039 || 
timer: 0.3940 sec.
iter 6720 || Loss: 5.8825 || 
timer: 0.3912 sec.
iter 6730 || Loss: 5.6895 || 
timer: 0.4230 sec.
iter 6740 || Loss: 5.7232 || 
timer: 0.6187 sec.
iter 6750 || Loss: 7.8772 || 
timer: 0.3980 sec.
iter 6760 || Loss: 5.4381 || 
timer: 0.4038 sec.
iter 6770 || Loss: 6.9006 || 
timer: 0.6342 sec.
iter 6780 || Loss: 7.3809 || 
timer: 0.4165 sec.
iter 6790 || Loss: 6.0262 || 
timer: 0.4129 sec.
iter 6800 || Loss: 6.3773 || 
timer: 0.3997 sec.
iter 6810 || Loss: 6.3178 || 
timer: 0.4147 sec.
iter 6820 || Loss: 6.8223 || 
timer: 0.8741 sec.
iter 6830 || Loss: 5.9362 || 
